# Elastic Beanstalk
# https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-linux-extend.html
#
# This config directs nginx to the correct puma socket file.
# You can also:
# - configure TLS (first follow the instructions in 21-certbot.config)
# - filter out bad traffic (e.g. wrong Host header, etc)

user                 nginx;
worker_processes     auto;
error_log            /var/log/nginx/error.log;
pid                  /var/run/nginx.pid;
worker_rlimit_nofile 14307;

events {
  worker_connections 1024;
}

http {
  index         index.html;
  charset_types utf-8;
  charset       utf-8;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  server_tokens off;
  sendfile      off;

  # Increase timeouts
  keepalive_timeout     300;
  proxy_connect_timeout 300;
  proxy_send_timeout    300;
  proxy_read_timeout    300;
  send_timeout          300;

  log_format main    '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
  log_format healthd '$msec"$uri"'
                     '$status"$request_time"$upstream_response_time"'
                     '$http_x_forwarded_for';

  server {
    server_name _;
    # To only serve the app when the correct domain name is used: (also uncomment the two bottom-most server blocks)
    # server_name yourdomainhere.elasticbeanstalk.com;

    # If you want to use https, then comment these two lines out and uncomment the block below. Also uncomment the second server block towards the bottom of this file.
    listen 80;
    listen [::]:80;

    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate           /etc/letsencrypt/live/eb/fullchain.pem;
    # ssl_certificate_key       /etc/letsencrypt/live/eb/privkey.pem;
    # ssl_session_timeout       5m;
    # ssl_protocols             TLSv1.2;
    # ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    # ssl_prefer_server_ciphers on;

    # Compress static assets
    gzip            on;
    gzip_comp_level 4;
    gzip_types      text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    root        /var/app/current/public;
    try_files   $uri @app;

    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
      set $year $1;
      set $month $2;
      set $day $3;
      set $hour $4;
    }
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

    # redirect trailing dot in domain name
    if ($http_host ~ \.$) {
      rewrite ^(.*) $scheme://$host$1 permanent;
    }

    # Allow certbot to issue certificates
    location ^~ /.well-known/  {
      root /var/acme-challenges;
    }

    # deny access to files starting with dot
    location ~ /\. {
      deny all;
    }

    location @app {
      proxy_pass http://unix:/var/app/current/tmp/puma.sock;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # Redirect http to https
  # server {
  #   server_name _;
  #   # To limit this to when the correct domain name is used:
  #   # server_name yourdomainhere.elasticbeanstalk.com;
  #   listen 80;
  #   location ^~ /.well-known/  {
  #     root /var/acme-challenges;
  #   }
  #   location / {
  #     # Use this to intentionally remove the path:
  #     return 301 https://$host/;
  #     # Use this to retain the path:
  #     # return 301 https://$host$request_uri;
  #   }
  # }

  # Serve 404 errors when the wrong domain name is used (will catch most bots)
  # server {
  #   listen 80 default_server;
  #   location / {
  #     return 404;
  #   }
  # }
  # server {
  #   listen 443 ssl http2 default_server;
  #   listen [::]:443 ssl http2 default_server;
  #   ssl_certificate           /etc/letsencrypt/selfsigned/cert.pem;
  #   ssl_certificate_key       /etc/letsencrypt/selfsigned/privkey.pem;
  #   ssl_session_timeout       5m;
  #   ssl_protocols             TLSv1.2;
  #   ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  #   ssl_prefer_server_ciphers on;
  #   location / {
  #     return 404;
  #   }
  # }
}
